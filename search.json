[{"path":"https://anguswg-ucsb.github.io/cdssr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 cdssr authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Angus Watters. Author, maintainer.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Watters (2023). cdssr: R Client CDSS REST API services. R package version 1.1.4.300, https://anguswg-ucsb.github.io/cdssr/.","code":"@Manual{,   title = {cdssr: R Client for CDSS REST API services},   author = {Angus Watters},   year = {2023},   note = {R package version 1.1.4.300},   url = {https://anguswg-ucsb.github.io/cdssr/}, }"},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"cdssr-","dir":"","previous_headings":"","what":"R Client for CDSS REST API services","title":"R Client for CDSS REST API services","text":"« CDSS » CDSS REST Web Services goal cdssr provide functions help R users navigate, explore, make requests CDSS REST API web service. Colorado’s Decision Support Systems (CDSS) water management system created developed Colorado Water Conservation Board (CWCB) Colorado Division Water Resources (DWR). Thank CWCB DWR providing accessible well documented REST API!  See cdsspy, Python version package cdssr (R) cdssr documentation cdsspy (Python) cdsspy documentation","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R Client for CDSS REST API services","text":"can install development version cdssr GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"anguswg-ucsb/cdssr\") # Load package library(cdssr)"},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"available-endpoints","dir":"","previous_headings":"","what":"Available endpoints","title":"R Client for CDSS REST API services","text":"table CDSS API endpoints cdssr provides functions .","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"example-explore-endpoint","dir":"","previous_headings":"Available endpoints","what":"Example: Explore endpoint","title":"R Client for CDSS REST API services","text":"check various CDSS API endpoint, cdssr comes packaged api_endpoint table details endpoint names, descriptions, relevant URLs.","code":"dplyr::tibble(cdssr::api_endpoints) #> # A tibble: 61 × 5 #>    resource                                      descrip…¹ endpo…² url   endpo…³ #>    <chr>                                         <chr>     <chr>   <chr> <chr>   #>  1 Active Administrative Calls Generator         Returns … api/v2… http… https:… #>  2 Historical Administrative Calls Generator     Returns … api/v2… http… https:… #>  3 Water Source Route Analysis Info Generator    Returns … api/v2… http… https:… #>  4 Water Source Route Framework Info Generator   Returns … api/v2… http… https:… #>  5 Call Analysis Structure Info Generator        Performs… api/v2… http… https:… #>  6 Call Analysis Stream Mile Info Generator      Performs… api/v2… http… https:… #>  7 Climate Stations Generator                    Returns … api/v2… http… https:… #>  8 Climate Station Data Types Generator          Returns … api/v2… http… https:… #>  9 Climate Station Time Series - Day Generator   Returns … api/v2… http… https:… #> 10 Climate Station Time Series - Month Generator Returns … api/v2… http… https:… #> # … with 51 more rows, and abbreviated variable names ¹​description, ²​endpoint, #> #   ³​endpoint_url"},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"example-view-meta-data","dir":"","previous_headings":"Available endpoints","what":"Example: View meta data","title":"R Client for CDSS REST API services","text":"cdssr also comes packaged resource_meta dataset provides meta data data retrieved cdssr (via CDSS REST API)","code":"dplyr::tibble(cdssr::resource_meta) #> # A tibble: 1,031 × 5 #>    endpoint                          name                  descr…¹ type  endpo…² #>    <chr>                             <chr>                 <chr>   <chr> <chr>   #>  1 api/v2/administrativecalls/active boundingStructureLat… Latitu… deci… https:… #>  2 api/v2/administrativecalls/active boundingStructureLon… Longit… deci… https:… #>  3 api/v2/administrativecalls/active boundingStructureName Struct… stri… https:… #>  4 api/v2/administrativecalls/active boundingWdid          WDID o… stri… https:… #>  5 api/v2/administrativecalls/active callNumber            Unique… inte… https:… #>  6 api/v2/administrativecalls/active callType              The ty… stri… https:… #>  7 api/v2/administrativecalls/active dateTimeReleased      Date a… date  https:… #>  8 api/v2/administrativecalls/active dateTimeSet           Date a… date  https:… #>  9 api/v2/administrativecalls/active division              DWR Wa… inte… https:… #> 10 api/v2/administrativecalls/active locationStructureLat… Latitu… deci… https:… #> # … with 1,021 more rows, and abbreviated variable names ¹​description, #> #   ²​endpoint_url"},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"identify-query-inputs-using-reference-tables","dir":"","previous_headings":"","what":"Identify query inputs using reference tables","title":"R Client for CDSS REST API services","text":"get_reference_tbl() function return tables makes easier know information supplied data retrieval functions cdssr. information exact reference tables click . Let’s locate parameters available telemetry stations.","code":"# available parameters for telemetry stations telemetry_params <- cdssr::get_reference_tbl(   table_name = \"telemetryparams\"   ) #> Retrieving telemetry parameter reference table #> # A tibble: 46 × 1 #>    parameter #>    <chr>     #>  1 AIRTEMP   #>  2 BAR_P     #>  3 BATTERY   #>  4 COND      #>  5 D1        #>  6 D2        #>  7 DISCHRG   #>  8 DISCHRG1  #>  9 DISCHRG2  #> 10 DISCHRG3  #> # … with 36 more rows"},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"locate-structures","dir":"","previous_headings":"","what":"Locate structures","title":"R Client for CDSS REST API services","text":"cdssr provides functions locating structures/stations/wells/sites providing spatial extent, water district, division, county, designated basin, management district functions table . Site data can also retrieved providing site specific abbreviations, GNIS IDs, USGS IDs, WDIDs, Well IDs.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"example-locating-telemetry-stations-by-county","dir":"","previous_headings":"Locate structures","what":"Example: Locating telemetry stations by county","title":"R Client for CDSS REST API services","text":"","code":"# identify telemetry stations in Boulder county stations <- cdssr::get_telemetry_stations(   county = \"Boulder\"   ) #> Retrieving telemetry station data #> # A tibble: 110 × 35 #>    divis…¹ water…² county stati…³ data_…⁴ data_…⁵ water…⁶ gnis_id strea…⁷ abbrev #>      <int>   <int> <chr>  <chr>   <chr>   <chr>   <chr>   <chr>     <dbl> <chr>  #>  1       1       5 BOULD… \"CLOUG… NCWCD   Northe… SAINT … 002050…   NA    05005… #>  2       1       6 BOULD… \"ANDER… DWR     Co. Di… BOULDE… 001783…   23.6  ANDDI… #>  3       1       6 BOULD… \"ANDRE… DWR     Co. Di… SOUTH … 001809…    1.5  ANFDI… #>  4       1       6 BOULD… \"BASEL… DWR     Co. Di… BOULDE… 001783…   19.2  BASOU… #>  5       1       6 BOULD… \"BOULD… NCWCD   Northe… BOULDE… 001783…   15.5  BCSCB… #>  6       1       5 BOULD… \"BOULD… NCWCD   Northe… LEFT H… 001782…    8.66 BFCIN… #>  7       1       5 BOULD… \"BOULD… NCWCD   Northe… SAINT … 002050…   31.7  BFCLY… #>  8       1       5 BOULD… \"BOULD… NCWCD   Northe… SAINT … 002050…   31.7  BFCLY… #>  9       1       5 BOULD… \"LYONS… DWR     Co. Di… SOUTH … 001782…    0.03 BHNPR… #> 10       1       6 BOULD… \"BOULD… DWR     Co. Di… BOULDE… 001783…   22.3  BLDLH… #> # … with 100 more rows, 25 more variables: usgs_station_id <chr>, #> #   station_status <chr>, station_type <chr>, structure_type <chr>, #> #   meas_date_time <dttm>, parameter <chr>, stage <dbl>, meas_value <dbl>, #> #   units <chr>, flag_a <chr>, flag_b <chr>, contr_area <dbl>, #> #   drain_area <dbl>, huc10 <chr>, utm_x <dbl>, utm_y <dbl>, latitude <dbl>, #> #   longitude <dbl>, location_accuracy <chr>, wdid <chr>, modified <chr>, #> #   more_information <chr>, station_por_start <dttm>, station_por_end <dttm>, …"},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"example-locating-telemetry-stations-around-a-point","dir":"","previous_headings":"Locate structures","what":"Example: Locating telemetry stations around a point","title":"R Client for CDSS REST API services","text":"","code":"# identify telemetry stations 10 miles around a point stations <- cdssr::get_telemetry_stations(   aoi    = c(-105.358164, 40.092608),   radius = 10   ) #> # A tibble: 110 × 35 #>    divis…¹ water…² county stati…³ data_…⁴ data_…⁵ water…⁶ gnis_id strea…⁷ abbrev #>      <int>   <int> <chr>  <chr>   <chr>   <chr>   <chr>   <chr>     <dbl> <chr>  #>  1       1       5 BOULD… \"CLOUG… NCWCD   Northe… SAINT … 002050…   NA    05005… #>  2       1       6 BOULD… \"ANDER… DWR     Co. Di… BOULDE… 001783…   23.6  ANDDI… #>  3       1       6 BOULD… \"ANDRE… DWR     Co. Di… SOUTH … 001809…    1.5  ANFDI… #>  4       1       6 BOULD… \"BASEL… DWR     Co. Di… BOULDE… 001783…   19.2  BASOU… #>  5       1       6 BOULD… \"BOULD… NCWCD   Northe… BOULDE… 001783…   15.5  BCSCB… #>  6       1       5 BOULD… \"BOULD… NCWCD   Northe… LEFT H… 001782…    8.66 BFCIN… #>  7       1       5 BOULD… \"BOULD… NCWCD   Northe… SAINT … 002050…   31.7  BFCLY… #>  8       1       5 BOULD… \"BOULD… NCWCD   Northe… SAINT … 002050…   31.7  BFCLY… #>  9       1       5 BOULD… \"LYONS… DWR     Co. Di… SOUTH … 001782…    0.03 BHNPR… #> 10       1       6 BOULD… \"BOULD… DWR     Co. Di… BOULDE… 001783…   22.3  BLDLH… #> # … with 100 more rows, 25 more variables: usgs_station_id <chr>, #> #   station_status <chr>, station_type <chr>, structure_type <chr>, #> #   meas_date_time <dttm>, parameter <chr>, stage <dbl>, meas_value <dbl>, #> #   units <chr>, flag_a <chr>, flag_b <chr>, contr_area <dbl>, #> #   drain_area <dbl>, huc10 <chr>, utm_x <dbl>, utm_y <dbl>, latitude <dbl>, #> #   longitude <dbl>, location_accuracy <chr>, wdid <chr>, modified <chr>, #> #   more_information <chr>, station_por_start <dttm>, station_por_end <dttm>, …"},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"example-locating-telemetry-stations-within-a-spatial-extent","dir":"","previous_headings":"Locate structures","what":"Example: Locating telemetry stations within a spatial extent","title":"R Client for CDSS REST API services","text":"masking operation performed location search done using polygon. ensures function returns points within given polygon.  gif highlights masking process happens aoi argument given polygon","code":"# load AOI to retrieve county polygons library(AOI)  # identify telemetry stations 15 miles around the centroid of a polygon stations <- cdssr::get_telemetry_stations(   aoi    = AOI::aoi_get(county = \"Boulder\", state = \"CO\"),   radius = 15   ) #> Retrieving telemetry station data #> Location search:  #> Latitude: 40.0843975 #> Longitude: -105.345242774525 #> Radius (miles): 15 #> # A tibble: 108 × 35 #>    divis…¹ water…² county stati…³ data_…⁴ data_…⁵ water…⁶ gnis_id strea…⁷ abbrev #>      <int>   <int> <chr>  <chr>   <chr>   <chr>   <chr>   <chr>     <dbl> <chr>  #>  1       1       5 BOULD… \"CLOUG… NCWCD   Northe… SAINT … 002050…   NA    05005… #>  2       1       6 BOULD… \"ANDER… DWR     Co. Di… BOULDE… 001783…   23.6  ANDDI… #>  3       1       6 BOULD… \"ANDRE… DWR     Co. Di… SOUTH … 001809…    1.5  ANFDI… #>  4       1       6 BOULD… \"BASEL… DWR     Co. Di… BOULDE… 001783…   19.2  BASOU… #>  5       1       6 BOULD… \"BOULD… NCWCD   Northe… BOULDE… 001783…   15.5  BCSCB… #>  6       1       5 BOULD… \"BOULD… NCWCD   Northe… LEFT H… 001782…    8.66 BFCIN… #>  7       1       5 BOULD… \"BOULD… NCWCD   Northe… SAINT … 002050…   31.7  BFCLY… #>  8       1       5 BOULD… \"BOULD… NCWCD   Northe… SAINT … 002050…   31.7  BFCLY… #>  9       1       5 BOULD… \"LYONS… DWR     Co. Di… SOUTH … 001782…    0.03 BHNPR… #> 10       1       6 BOULD… \"BOULD… DWR     Co. Di… BOULDE… 001783…   22.3  BLDLH… #> # … with 98 more rows, 25 more variables: usgs_station_id <chr>, #> #   station_status <chr>, station_type <chr>, structure_type <chr>, #> #   meas_date_time <dttm>, parameter <chr>, stage <dbl>, meas_value <dbl>, #> #   units <chr>, flag_a <chr>, flag_b <chr>, contr_area <dbl>, #> #   drain_area <dbl>, huc10 <chr>, utm_x <dbl>, utm_y <dbl>, latitude <dbl>, #> #   longitude <dbl>, location_accuracy <chr>, wdid <chr>, modified <chr>, #> #   more_information <chr>, station_por_start <dttm>, station_por_end <dttm>, …"},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"retrieve-time-series-data","dir":"","previous_headings":"","what":"Retrieve time series data","title":"R Client for CDSS REST API services","text":"functions table retrieve time series data various time series related CDSS API endpoints.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"example-daily-discharge-at-a-telemetry-station","dir":"","previous_headings":"Retrieve time series data","what":"Example: Daily discharge at a telemetry station","title":"R Client for CDSS REST API services","text":"can take station abbreviations get_telemetry_stations() call, parameter get_reference_tbl() call, use information inputs get_telemetry_ts() function.  function returns dataframe daily discharge “ANDDITCO” site 2015-2022.","code":"# Daily discharge at \"ANDDITCO\" telemetry station discharge_ts <- cdssr::get_telemetry_ts(                       abbrev              = \"ANDDITCO\",     # Site abbreviation                       parameter           = \"DISCHRG\",      # Desired parameter                       start_date          = \"2015-01-01\",   # Starting date                       end_date            = \"2022-01-01\",   # Ending date                       timescale           = \"day\"           # select daily timescale                                 ) #> Retrieving telemetry station time series data (day - DISCHRG) #> # A tibble: 572 × 11 #>    abbrev   parameter meas_date    meas_…¹ meas_…² flag_a flag_b meas_…³ modif…⁴ #>    <chr>    <chr>     <chr>          <dbl> <chr>   <chr>  <chr>    <int> <chr>   #>  1 ANDDITCO DISCHRG   2020-05-07 …    3.05 cfs     O      <NA>        33 2020-0… #>  2 ANDDITCO DISCHRG   2020-05-08 …    3.04 cfs     O      <NA>        96 2020-0… #>  3 ANDDITCO DISCHRG   2020-05-09 …    2.98 cfs     O      <NA>        96 2020-0… #>  4 ANDDITCO DISCHRG   2020-05-10 …    2.95 cfs     O      <NA>        96 2020-0… #>  5 ANDDITCO DISCHRG   2020-05-11 …    2.95 cfs     O      <NA>        96 2020-0… #>  6 ANDDITCO DISCHRG   2020-05-12 …    2.95 cfs     O      <NA>        96 2020-0… #>  7 ANDDITCO DISCHRG   2020-05-13 …    2.95 cfs     O      <NA>        96 2020-0… #>  8 ANDDITCO DISCHRG   2020-05-14 …    2.95 cfs     O      <NA>         9 2020-0… #>  9 ANDDITCO DISCHRG   2020-05-15 …    2.95 cfs     O      <NA>        63 2020-0… #> 10 ANDDITCO DISCHRG   2020-05-16 …    2.95 cfs     O      <NA>        96 2020-0… #> # … with 562 more rows, 2 more variables: datetime <dttm>, timescale <chr>, and #> #   abbreviated variable names ¹​meas_value, ²​meas_unit, ³​meas_count, ⁴​modified"},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"example-retrieve-diversion-records-for-multiple-structures","dir":"","previous_headings":"Retrieve time series data","what":"Example: Retrieve Diversion records for multiple structures","title":"R Client for CDSS REST API services","text":"CDSS API endpoints allow users request data multiple structures provide list IDs. want get diversion data multiple structure locations, ’ll need get list WDIDs. can get list WDIDs within given area : Executing spatial search using get_structures() Selecting WDIDs interest search results Providing WDIDs vector get_structures_divrec_ts() Note: Data availability can vary structures (.e. Missing data, structures every data type/temporal resolution available, etc.)","code":"# 1. Executing a spatial search structures <- cdssr::get_structures(   aoi    = c(-105.3578, 40.09244),   radius = 5 ) #> Retreiving administrative structures #> Location search:  #> Latitude: 40.09244 #> Longitude: -105.3578 #> Radius (miles): 5  # 2. Selecting the WDID's of interest from our search results ditch_wdids <-   structures %>%     dplyr::filter(ciu_code == \"A\", structure_type == \"DITCH\") %>%   .$wdid  # 3. Providing the WDID's as a vector to get_structures_divrec_ts() diversion_rec <-   cdssr::get_structures_divrec_ts(                         wdid           = ditch_wdids,                         wc_identifier  = \"diversion\",                         start_date     = \"1990-01-01\",                         end_date       = \"2022-01-01\",                         timescale      = \"month\"                         ) #> Retrieving monthly diversion data #> # A tibble: 495 × 12 #>    wdid  water…¹ wc_id…² meas_…³ meas_…⁴ data_…⁵ data_…⁶ meas_…⁷ obs_c…⁸ appro…⁹ #>    <chr>   <int> <chr>   <chr>     <int> <chr>     <dbl> <chr>   <chr>   <chr>   #>  1 0500…  1.05e7 050056… Daily        18 1992-04    165. ACFT    U       Approv… #>  2 0500…  1.05e7 050056… Daily        31 1992-05    745. ACFT    U       Approv… #>  3 0500…  1.05e7 050056… Daily        30 1992-06    430. ACFT    U       Approv… #>  4 0500…  1.05e7 050056… Daily        31 1992-07    372. ACFT    U       Approv… #>  5 0500…  1.05e7 050056… Daily        31 1992-08    611. ACFT    U       Approv… #>  6 0500…  1.05e7 050056… Daily        29 1992-09    315. ACFT    U       Approv… #>  7 0500…  1.05e7 050056… Daily        29 1992-10    120. ACFT    U       Approv… #>  8 0500…  1.05e7 050056… Daily        25 2004-04    244. ACFT    U       Approv… #>  9 0500…  1.05e7 050056… Daily        40 2004-05    699. ACFT    U       Approv… #> 10 0500…  1.05e7 050056… Daily        25 2004-06    294. ACFT    U       Approv… #> # … with 485 more rows, 2 more variables: modified <chr>, datetime <date>, and #> #   abbreviated variable names ¹​water_class_num, ²​wc_identifier, #> #   ³​meas_interval, ⁴​meas_count, ⁵​data_meas_date, ⁶​data_value, ⁷​meas_units, #> #   ⁸​obs_code, ⁹​approval_status"},{"path":[]},{"path":"https://anguswg-ucsb.github.io/cdssr/index.html","id":"retrieve-groundwater-well-data","dir":"","previous_headings":"Example: Groundwater well data","what":"Retrieve groundwater well data","title":"R Client for CDSS REST API services","text":"get_gw_() set functions lets users make get requests various CDSS API groundwater endpoints shown table :  retrieve groundwater well measurement data Well ID 1274 1990-2022.","code":"# Request wellmeasurements endpoint (api/v2/groundwater/waterlevels/wellmeasurements) well_measure <- cdssr::get_gw_wl_wellmeasures(   wellid     = 1274,   start_date = \"1990-01-01\",   end_date   = \"2022-01-01\"   ) #> Retrieving groundwater well measurements #> # A tibble: 1,469 × 18 #>    well_id well_name      divis…¹ water…² county manag…³ desig…⁴ publi…⁵ measu…⁶ #>      <int> <chr>            <int>   <int> <chr>  <lgl>   <lgl>   <chr>   <chr>   #>  1    1274 LSP-020  03N6…       1       2 WELD   NA      NA      LOWER … 1990-0… #>  2    1274 LSP-020  03N6…       1       2 WELD   NA      NA      LOWER … 1990-1… #>  3    1274 LSP-020  03N6…       1       2 WELD   NA      NA      LOWER … 1991-0… #>  4    1274 LSP-020  03N6…       1       2 WELD   NA      NA      LOWER … 1991-1… #>  5    1274 LSP-020  03N6…       1       2 WELD   NA      NA      LOWER … 1992-0… #>  6    1274 LSP-020  03N6…       1       2 WELD   NA      NA      LOWER … 1992-0… #>  7    1274 LSP-020  03N6…       1       2 WELD   NA      NA      LOWER … 1992-1… #>  8    1274 LSP-020  03N6…       1       2 WELD   NA      NA      LOWER … 1993-0… #>  9    1274 LSP-020  03N6…       1       2 WELD   NA      NA      LOWER … 1993-1… #> 10    1274 LSP-020  03N6…       1       2 WELD   NA      NA      LOWER … 1994-0… #> # … with 1,459 more rows, 9 more variables: depth_to_water <dbl>, #> #   measuring_point_above_land_surface <dbl>, #> #   depth_water_below_land_surface <dbl>, elevation_of_water <dbl>, #> #   delta <dbl>, data_source <chr>, published <chr>, modified <chr>, #> #   datetime <dttm>, and abbreviated variable names ¹​division, ²​water_district, #> #   ³​management_district, ⁴​designated_basin, ⁵​publication, ⁶​measurement_date"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/api_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"List of CDSS API endpoints — api_endpoints","title":"List of CDSS API endpoints — api_endpoints","text":"Dataframe containing list CDSS REST API endpoints","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/api_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of CDSS API endpoints — api_endpoints","text":"","code":"api_endpoints"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/api_endpoints.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of CDSS API endpoints — api_endpoints","text":"object class tbl_df (inherits tbl, data.frame) 61 rows 5 columns.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/api_endpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of CDSS API endpoints — api_endpoints","text":"","code":"if (FALSE) {  cdssr::api_endpoints }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_admin_calls.html","id":null,"dir":"Reference","previous_headings":"","what":"Return active/historic administrative calls data — get_admin_calls","title":"Return active/historic administrative calls data — get_admin_calls","text":"Make request api/v2/administrativecalls endpoints locate active historical administrative calls division, location WDID, call number within specified date range.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_admin_calls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return active/historic administrative calls data — get_admin_calls","text":"","code":"get_admin_calls(   division = NULL,   location_wdid = NULL,   call_number = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   active = TRUE,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_admin_calls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return active/historic administrative calls data — get_admin_calls","text":"division character numeric, indicating water division query location_wdid character numeric, call location structure WDID call_number numeric, unique call identifier start_date character date request data start point YYYY-MM-DD end_date character date request data end point YYYY-MM-DD active logical, whether get active historical administrative calls. Default TRUE, retrieve active administrative calls. api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_admin_calls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return active/historic administrative calls data — get_admin_calls","text":"dataframe administrative calls data","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_admin_calls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return active/historic administrative calls data — get_admin_calls","text":"","code":"if (FALSE) { # Retrieve ACTIVE administrative calls active_calls <- get_admin_calls(                division     = 1,                active       = TRUE            )  # Retrieve HISTORICAL administrative calls historic_calls <- get_admin_calls(                division     = 1,                start_date   = \"2000-01-01\",                end_date     = \"2005-01-01\",                active       = FALSE                ) }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_call_analysis_gnisid.html","id":null,"dir":"Reference","previous_headings":"","what":"Return call analysis by GNIS ID from analysis services API — get_call_analysis_gnisid","title":"Return call analysis by GNIS ID from analysis services API — get_call_analysis_gnisid","text":"Makes request analysisservices/callanalysisbygnisid/ endpoint performs call analysis returns time series showing percentage day specified stream/stream mile priority priority downstream call priority. can used existing WDID analyzed.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_call_analysis_gnisid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return call analysis by GNIS ID from analysis services API — get_call_analysis_gnisid","text":"","code":"get_call_analysis_gnisid(   gnis_id = NULL,   admin_no = NULL,   stream_mile = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   batch = FALSE,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_call_analysis_gnisid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return call analysis by GNIS ID from analysis services API — get_call_analysis_gnisid","text":"gnis_id character, GNIS ID query. Defaults NULL. admin_no character Water Right Administration Number stream_mile numeric, stream mile call analysis start_date character date request data start point YYYY-MM-DD. Default start date \"1900-01-01\". end_date character date request data end point YYYY-MM-DD. Default end date current date function run. batch logical, whether break date range calls batches 1 year. can speed data retrieval date ranges greater year. date range 5 years batched 5 separate API calls year. Default FALSE, run single query entire date range. api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_call_analysis_gnisid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return call analysis by GNIS ID from analysis services API — get_call_analysis_gnisid","text":"dataframe call services GNIS ID","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_call_analysis_wdid.html","id":null,"dir":"Reference","previous_headings":"","what":"Return call analysis by WDID from analysis services API — get_call_analysis_wdid","title":"Return call analysis by WDID from analysis services API — get_call_analysis_wdid","text":"Makes request analysisservices/callanalysisbywdid/ endpoint performs call analysis returns time series showing percentage day specified WDID priority priority downstream call priority.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_call_analysis_wdid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return call analysis by WDID from analysis services API — get_call_analysis_wdid","text":"","code":"get_call_analysis_wdid(   wdid = NULL,   admin_no = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   batch = FALSE,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_call_analysis_wdid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return call analysis by WDID from analysis services API — get_call_analysis_wdid","text":"wdid character indicating DWR unique structure identifier code (WDID) admin_no character Water Right Administration Number start_date character date request data start point YYYY-MM-DD. Default start date \"1900-01-01\". end_date character date request data end point YYYY-MM-DD. Default end date current date function run. batch logical, whether break date range calls batches 1 year. can speed data retrieval date ranges greater year. date range 5 years batched 5 separate API calls year. Default FALSE, run single query entire date range. api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_call_analysis_wdid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return call analysis by WDID from analysis services API — get_call_analysis_wdid","text":"dataframe call services WDID","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_frostdates.html","id":null,"dir":"Reference","previous_headings":"","what":"Return climate stations frost dates — get_climate_frostdates","title":"Return climate stations frost dates — get_climate_frostdates","text":"Make request /climatedata/climatestationfrostdates endpoint retrieve climate stations frost dates data station number within given date range (start end dates)","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_frostdates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return climate stations frost dates — get_climate_frostdates","text":"","code":"get_climate_frostdates(   station_number = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_frostdates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return climate stations frost dates — get_climate_frostdates","text":"station_number character, climate data station number start_date character date request data start point YYYY-MM-DD end_date character date request data end point YYYY-MM-DD api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_frostdates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return climate stations frost dates — get_climate_frostdates","text":"dataframe climate data frost dates data","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Climate Station information — get_climate_stations","title":"Return Climate Station information — get_climate_stations","text":"Make request climatedata/climatestations/ endpoint locate climate stations AOI, county, division, station name, Site ID water district.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Climate Station information — get_climate_stations","text":"","code":"get_climate_stations(   aoi = NULL,   radius = NULL,   county = NULL,   division = NULL,   station_name = NULL,   site_id = NULL,   water_district = NULL,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Climate Station information — get_climate_stations","text":"aoi list length 2 containing XY coordinate pair, 2 column matrix/dataframe XY coordinates, sf Terra SpatVector point/polygon/linestring geometry radius numeric, search radius miles around given point (centroid polygon). AOI given, radius defaults 20 miles. AOI given, default NULL. county character, indicating county query division numeric, indicating water division query station_name character, surface water station name site_id character vector list characters climate station site IDs water_district numeric, indicating water district query api_key character, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Climate Station information — get_climate_stations","text":"dataframe climate data station info","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Climate Station information — get_climate_stations","text":"","code":"if (FALSE) { # get climate stations in Adams County, CO climate_stations  <- get_climate_stations(                        county = \"Adams\"                        )  # plot latitude/longitude of climate stations plot(climate_stations$latitude~climate_stations$longitude) }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Return climate station time series data — get_climate_ts","title":"Return climate station time series data — get_climate_ts","text":"Make request /climatedata/climatestationts endpoints retrieve daily monthly (climatestationtsday climatestationtsmonth)climate station time series data station number Site IDs within given date range (start end dates)","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return climate station time series data — get_climate_ts","text":"","code":"get_climate_ts(   station_number = NULL,   site_id = NULL,   param = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   timescale = NULL,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return climate station time series data — get_climate_ts","text":"station_number character, surface water station number site_id character vector list characters climate station site IDs param character climate variable. One : \"Evap\", \"FrostDate\",  \"MaxTemp\", \"MeanTemp\", \"MinTemp\", \"Precip\", \"Snow\", \"SnowDepth\", \"SnowSWE\", \"Solar\",\"VP\", \"Wind\" start_date character date request data start point YYYY-MM-DD. Default start date \"1900-01-01\". end_date character date request data end point YYYY-MM-DD. Default end date current date function run. timescale character indicating time series time step. Either \"day\", \"month\", \"year\". Default return daily time series. api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return climate station time series data — get_climate_ts","text":"dataframe climate station timeseries data","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return climate station time series data — get_climate_ts","text":"","code":"if (FALSE) { # Retrieve daily maximum temperatures daily_maxtemp <- get_climate_ts(   site_id     = \"USC00055984\",   param       = \"MaxTemp\",   start_date  = \"2017-01-01\",   end_date    = \"2020-01-01\",   timescale   = \"day\"   )  # plot daily maximum temp at climate station plot(daily_maxtemp$value~daily_maxtemp$datetime, type = \"l\")  # Retrieve monthly precipitation monthly_precip <- get_climate_ts(   site_id     = \"USC00055984\",   param       = \"Precip\",   start_date  = \"2000-01-01\",   end_date    = \"2022-01-01\",   timescale   = \"month\"    )   # plot daily max temp at climate station  plot(monthly_precip$avg_value~monthly_precip$datetime, type = \"l\")  }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_ts_day.html","id":null,"dir":"Reference","previous_headings":"","what":"Return daily climate data — get_climate_ts_day","title":"Return daily climate data — get_climate_ts_day","text":"Make request /climatedata/climatestationtsday endpoint retrieve climate stations daily time series data station number, Site IDs within given date range (start end dates)","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_ts_day.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return daily climate data — get_climate_ts_day","text":"","code":"get_climate_ts_day(   station_number = NULL,   site_id = NULL,   param = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_ts_day.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return daily climate data — get_climate_ts_day","text":"station_number character, climate data station number site_id character vector list characters climate station site IDs param character climate variable. One : \"Evap\", \"FrostDate\",  \"MaxTemp\", \"MeanTemp\", \"MinTemp\", \"Precip\", \"Snow\", \"SnowDepth\", \"SnowSWE\", \"Solar\",\"VP\", \"Wind\" start_date character date request data start point YYYY-MM-DD. Default start date \"1900-01-01\". end_date character date request data end point YYYY-MM-DD. Default end date current date function run. api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_ts_day.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return daily climate data — get_climate_ts_day","text":"dataframe climate data station daily time series data","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_ts_month.html","id":null,"dir":"Reference","previous_headings":"","what":"Return monthly climate data — get_climate_ts_month","title":"Return monthly climate data — get_climate_ts_month","text":"Make request /climatedata/climatestationtsmonth endpoint retrieve climate stations monthly time series data station number, Site IDs within given date range (start end dates)","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_ts_month.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return monthly climate data — get_climate_ts_month","text":"","code":"get_climate_ts_month(   station_number = NULL,   site_id = NULL,   param = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_ts_month.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return monthly climate data — get_climate_ts_month","text":"station_number character, climate data station number site_id character vector list characters climate station site IDs param character climate variable. One : \"Evap\", \"FrostDate\",  \"MaxTemp\", \"MeanTemp\", \"MinTemp\", \"Precip\", \"Snow\", \"SnowDepth\", \"SnowSWE\", \"Solar\",\"VP\", \"Wind\" start_date character date request data start point YYYY-MM-DD end_date character date request data end point YYYY-MM-DD api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_climate_ts_month.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return monthly climate data — get_climate_ts_month","text":"dataframe climate data station monthly timeseries data","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_gplogs_geologpicks.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Groundwater Geophysical Log picks by well ID — get_gw_gplogs_geologpicks","title":"Return Groundwater Geophysical Log picks by well ID — get_gw_gplogs_geologpicks","text":"Make request groundwater/geophysicallogs/wells endpoint retrieve groundwater geophysical log picks given well ID.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_gplogs_geologpicks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Groundwater Geophysical Log picks by well ID — get_gw_gplogs_geologpicks","text":"","code":"get_gw_gplogs_geologpicks(wellid = NULL, api_key = NULL)"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_gplogs_geologpicks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Groundwater Geophysical Log picks by well ID — get_gw_gplogs_geologpicks","text":"wellid character, indicating Well ID query api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_gplogs_geologpicks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Groundwater Geophysical Log picks by well ID — get_gw_gplogs_geologpicks","text":"dataframe groundwater geophysical log picks given well ID","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_gplogs_geologpicks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Groundwater Geophysical Log picks by well ID — get_gw_gplogs_geologpicks","text":"","code":"if (FALSE) { # Request endpoint: api/v2/groundwater/geophysicallogs/geoplogpicks/ gplogpicks <- get_gw_gplogs_geologpicks(   wellid = 2409  ) }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_gplogs_wells.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for groundwater geophysicallog wells — get_gw_gplogs_wells","title":"Search for groundwater geophysicallog wells — get_gw_gplogs_wells","text":"Make request groundwater/geophysicallogs/wells endpoint retrieve groundwater geophysicallog wells data.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_gplogs_wells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for groundwater geophysicallog wells — get_gw_gplogs_wells","text":"","code":"get_gw_gplogs_wells(   county = NULL,   designated_basin = NULL,   division = NULL,   management_district = NULL,   water_district = NULL,   wellid = NULL,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_gplogs_wells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for groundwater geophysicallog wells — get_gw_gplogs_wells","text":"county character, indicating county query designated_basin character, indicating  designated basin query division numeric, indicating water division query management_district character, indicating management district query water_district numeric, indicating water district query wellid character, indicating Well ID query api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_gplogs_wells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for groundwater geophysicallog wells — get_gw_gplogs_wells","text":"dataframe groundwater wells within given query specifications","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_gplogs_wells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for groundwater geophysicallog wells — get_gw_gplogs_wells","text":"","code":"if (FALSE) { # Request endpoint: api/v2/groundwater/geophysicallogs/wells/ gplog_wells <- get_gw_gplogs_wells(   county = \"ADAMS\"  )  plot(gplog_wells$latitude~gplog_wells$longitude)  }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_wl_wellmeasures.html","id":null,"dir":"Reference","previous_headings":"","what":"Return groundwater water level well measurements — get_gw_wl_wellmeasures","title":"Return groundwater water level well measurements — get_gw_wl_wellmeasures","text":"Make request groundwater/waterlevels/wellmeasurements endpoint retrieve groundwater water level well measurement data.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_wl_wellmeasures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return groundwater water level well measurements — get_gw_wl_wellmeasures","text":"","code":"get_gw_wl_wellmeasures(   wellid = NULL,   start_date = \"1950-01-01\",   end_date = Sys.Date(),   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_wl_wellmeasures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return groundwater water level well measurements — get_gw_wl_wellmeasures","text":"wellid character vector list well IDs start_date character date request data start point (YYYY-MM-DD). end_date character date request data end point (YYYY-MM-DD). Default set current date function run. api_key character, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_wl_wellmeasures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return groundwater water level well measurements — get_gw_wl_wellmeasures","text":"dataframe groundwater wells within given query specifications","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_wl_wellmeasures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return groundwater water level well measurements — get_gw_wl_wellmeasures","text":"","code":"if (FALSE) { # Request endpoint: api/v2/groundwater/waterlevels/wellmeasurements well_measure <- get_gw_wl_wellmeasures(                   wellid = 1274                    )  # plot depth to water plot(well_measure$depth_to_water~well_measure$datetime, type = \"l\")  # get data from multiple well IDs multi_well <- get_gw_wl_wellmeasures(                   wellid = c(\"84\", \"85\", \"94\")                    )  }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_wl_wells.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for groundwater water level wells — get_gw_wl_wells","title":"Search for groundwater water level wells — get_gw_wl_wells","text":"Make request groundwater/waterlevels/wells endpoint retrieve groundwater water level wells data.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_wl_wells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for groundwater water level wells — get_gw_wl_wells","text":"","code":"get_gw_wl_wells(   county = NULL,   designated_basin = NULL,   division = NULL,   management_district = NULL,   water_district = NULL,   wellid = NULL,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_wl_wells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for groundwater water level wells — get_gw_wl_wells","text":"county character, indicating county query designated_basin character, indicating  designated basin query division numeric, indicating water division query management_district character, indicating management district query water_district numeric, indicating water district query wellid character, indicating Well ID query api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_wl_wells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for groundwater water level wells — get_gw_wl_wells","text":"dataframe groundwater wells within given query specifications","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_gw_wl_wells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for groundwater water level wells — get_gw_wl_wells","text":"","code":"if (FALSE) { # Request endpoint: api/v2/groundwater/waterlevels/wells/ wl_wells <- get_gw_wl_wells(   county = \"ADAMS\"  )  plot(wl_wells$latitude~wl_wells$longitude) }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_parceluse_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Return parcel use time series — get_parceluse_ts","title":"Return parcel use time series — get_parceluse_ts","text":"Make request /structures/parcelusets endpoint retrieve parcel use time series data WDID, within given date range (start end dates)","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_parceluse_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return parcel use time series — get_parceluse_ts","text":"","code":"get_parceluse_ts(   wdid = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_parceluse_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return parcel use time series — get_parceluse_ts","text":"wdid character numeric, indicating WDID code structure start_date character date request starting year retrieve data (YYYY-MM-DD). Default start date \"1900-01-01\", therefore requests data starting 1900. end_date character date  request ending year retrieve data (YYYY-MM-DD). Default end date current date function run. api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_parceluse_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return parcel use time series — get_parceluse_ts","text":"dataframe parcel use time series data","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_climate_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Return climate station parameter reference table — get_ref_climate_params","title":"Return climate station parameter reference table — get_ref_climate_params","text":"Make request referencetables/climatestationmeastype/ endpoint retrieve reference table parameters available climate stations. reference table functions can help provide information use querying endpoints.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_climate_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return climate station parameter reference table — get_ref_climate_params","text":"","code":"get_ref_climate_params(param = NULL, api_key = NULL)"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_climate_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return climate station parameter reference table — get_ref_climate_params","text":"param character, (optional) indicating parameter query character, parameter given, parameter dataframe returned api_key character, (optional). maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_climate_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return climate station parameter reference table — get_ref_climate_params","text":"dataframe climate station parameters","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_county.html","id":null,"dir":"Reference","previous_headings":"","what":"Return county reference table — get_ref_county","title":"Return county reference table — get_ref_county","text":"Make request referencetables/county/ endpoint retrieve reference table counties. reference table functions can help provide information use querying endpoints.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_county.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return county reference table — get_ref_county","text":"","code":"get_ref_county(county = NULL, api_key = NULL)"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_county.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return county reference table — get_ref_county","text":"county character, (optional) indicating county query, county given, entire county dataframe returned api_key character, (optional). maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_county.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return county reference table — get_ref_county","text":"dataframe Colorado counties","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_designatedbasins.html","id":null,"dir":"Reference","previous_headings":"","what":"Return designated basin reference table — get_ref_designatedbasins","title":"Return designated basin reference table — get_ref_designatedbasins","text":"Make request referencetables/designatedbasin/ endpoint retrieve reference table designated basins. reference table functions can help provide information use querying endpoints.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_designatedbasins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return designated basin reference table — get_ref_designatedbasins","text":"","code":"get_ref_designatedbasins(designated_basin = NULL, api_key = NULL)"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_designatedbasins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return designated basin reference table — get_ref_designatedbasins","text":"designated_basin character, (optional) indicating  designated basin query character, designated basin given, designated basins dataframe returned api_key character, (optional). maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_designatedbasins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return designated basin reference table — get_ref_designatedbasins","text":"dataframe Colorado designated basins","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_divrectypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Diversion Record Types reference table — get_ref_divrectypes","title":"Return Diversion Record Types reference table — get_ref_divrectypes","text":"Make request referencetables/divrectypes/ endpoint retrieve reference table diversion record types available. reference table functions can help provide information use querying endpoints.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_divrectypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Diversion Record Types reference table — get_ref_divrectypes","text":"","code":"get_ref_divrectypes(divrectype = NULL, api_key = NULL)"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_divrectypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Diversion Record Types reference table — get_ref_divrectypes","text":"divrectype character, (optional) diversion record type query, divrectype given, dataframe diversion record types returned. api_key character, (optional). maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_divrectypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Diversion Record Types reference table — get_ref_divrectypes","text":"dataframe diversion record types","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_managementdistricts.html","id":null,"dir":"Reference","previous_headings":"","what":"Return management districts reference table — get_ref_managementdistricts","title":"Return management districts reference table — get_ref_managementdistricts","text":"Make request referencetables/managementdistrict/ endpoint retrieve reference table management districts. reference table functions can help provide information use querying endpoints.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_managementdistricts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return management districts reference table — get_ref_managementdistricts","text":"","code":"get_ref_managementdistricts(management_district = NULL, api_key = NULL)"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_managementdistricts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return management districts reference table — get_ref_managementdistricts","text":"management_district character, (optional) indicating management district query, management district given, dataframe management districts returned api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.#' @importFrom httr GET content","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_managementdistricts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return management districts reference table — get_ref_managementdistricts","text":"dataframe Colorado management districts","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_stationflags.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Station Flag reference table — get_ref_stationflags","title":"Return Station Flag reference table — get_ref_stationflags","text":"Make request referencetables/stationflags/ endpoint retrieve reference table station flag descriptions. reference table functions can help provide information use querying endpoints.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_stationflags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Station Flag reference table — get_ref_stationflags","text":"","code":"get_ref_stationflags(flag = NULL, api_key = NULL)"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_stationflags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Station Flag reference table — get_ref_stationflags","text":"flag character, (optional) short code flag query, flag given, dataframe flags returned. api_key character, (optional). maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_stationflags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Station Flag reference table — get_ref_stationflags","text":"dataframe station flags flag descriptions","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_telemetry_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Return telemetry parameter reference table — get_ref_telemetry_params","title":"Return telemetry parameter reference table — get_ref_telemetry_params","text":"Make request referencetables/telemetryparams/ endpoint retrieve reference table parameters available telemetry stations. reference table functions can help provide information use querying endpoints.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_telemetry_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return telemetry parameter reference table — get_ref_telemetry_params","text":"","code":"get_ref_telemetry_params(param = NULL, api_key = NULL)"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_telemetry_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return telemetry parameter reference table — get_ref_telemetry_params","text":"param character, (optional) indicating parameter query character, parameter given, parameter dataframe returned api_key character, (optional). maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_telemetry_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return telemetry parameter reference table — get_ref_telemetry_params","text":"dataframe telemetry station parameters","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_waterdistricts.html","id":null,"dir":"Reference","previous_headings":"","what":"Return water districts reference table — get_ref_waterdistricts","title":"Return water districts reference table — get_ref_waterdistricts","text":"Make request referencetables/waterdistrict/ endpoint retrieve reference table water districts reference table functions can help provide information use querying endpoints.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_waterdistricts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return water districts reference table — get_ref_waterdistricts","text":"","code":"get_ref_waterdistricts(division = NULL, water_district = NULL, api_key = NULL)"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_waterdistricts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return water districts reference table — get_ref_waterdistricts","text":"division character, (optional) indicating division query, division given, dataframe water districts returned water_district character, (optional) indicating water district query, ater district given, dataframe water districts returned api_key character, (optional). maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_waterdistricts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return water districts reference table — get_ref_waterdistricts","text":"dataframe Colorado water districts, indicating division water district name","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_waterdivisions.html","id":null,"dir":"Reference","previous_headings":"","what":"Return water divisions reference table — get_ref_waterdivisions","title":"Return water divisions reference table — get_ref_waterdivisions","text":"Make request referencetables/waterdivision/ endpoint retrieve reference table water divisions. reference table functions can help provide information use querying endpoints.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_waterdivisions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return water divisions reference table — get_ref_waterdivisions","text":"","code":"get_ref_waterdivisions(division = NULL, api_key = NULL)"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_waterdivisions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return water divisions reference table — get_ref_waterdivisions","text":"division character, (optional) indicating division query, division given, dataframe water divisions returned api_key character, (optional). maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_ref_waterdivisions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return water divisions reference table — get_ref_waterdivisions","text":"dataframe Colorado water divisions water division names","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_reference_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Return reference table information, which may help with other searches — get_reference_tbl","title":"Return reference table information, which may help with other searches — get_reference_tbl","text":"Makes requests /referencetables/ endpoints returns helpful reference tables. Reference tables can help identify valid inputs querying CDSS API resources using cdssr. detailed information visit: https://dwr.state.co.us/rest/get/help#Datasets&#ReferenceTablesController&#gettingstarted&#jsonxml.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_reference_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return reference table information, which may help with other searches — get_reference_tbl","text":"","code":"get_reference_tbl(table_name = NULL, api_key = NULL)"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_reference_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return reference table information, which may help with other searches — get_reference_tbl","text":"table_name character,name reference table return. Must one : (\"county\", \"waterdistricts\", \"waterdivisions\", \"designatedbasins\", \"managementdistricts\", \"telemetryparams\", \"climateparams\", \"divrectypes\", \"flags\"). Defaults NULL api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_reference_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return reference table information, which may help with other searches — get_reference_tbl","text":"dataframe CDSS endpoint Reference Table","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_reference_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return reference table information, which may help with other searches — get_reference_tbl","text":"","code":"if (FALSE) { # Retrieve station flag reference table flag_tbl <- get_reference_tbl(    table_name = \"flags\"    )  # Retrieve available telemetry station parameters telemetry_params <- get_reference_tbl(    table_name = \"telemetryparams\"    )  # Retrieve available climate station parameters climate_params <- get_reference_tbl(    table_name = \"climateparams\"    )  # Retrieve water districts water_districts <- get_reference_tbl(    table_name = \"waterdistricts\"    ) }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_source_route_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns all WDID(s), and their stream mile, located between two different stream locations on the DWR Water Source Framework — get_source_route_analysis","title":"Returns all WDID(s), and their stream mile, located between two different stream locations on the DWR Water Source Framework — get_source_route_analysis","text":"Makes request analysisservices/watersourcerouteanalysis/ endpoint retrieve DWR source route framework analysis data","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_source_route_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns all WDID(s), and their stream mile, located between two different stream locations on the DWR Water Source Framework — get_source_route_analysis","text":"","code":"get_source_route_analysis(   lt_gnis_id = NULL,   lt_stream_mile = NULL,   ut_gnis_id = NULL,   ut_stream_mile = NULL,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_source_route_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns all WDID(s), and their stream mile, located between two different stream locations on the DWR Water Source Framework — get_source_route_analysis","text":"lt_gnis_id character numeric,    lower terminus GNIS ID lt_stream_mile character numeric, lower terminus stream mile ut_gnis_id character numeric, upper terminus GNIS ID ut_stream_mile character numeric, upper terminus stream mile api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_source_route_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns all WDID(s), and their stream mile, located between two different stream locations on the DWR Water Source Framework — get_source_route_analysis","text":"dataframe water source route framework analysis","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_source_route_framework.html","id":null,"dir":"Reference","previous_headings":"","what":"Return DWR source route framework from analysis services API — get_source_route_framework","title":"Return DWR source route framework from analysis services API — get_source_route_framework","text":"Makes request analysisservices/watersourcerouteframework/ endpoint retrieve DWR source route framework reference table criteria specified.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_source_route_framework.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return DWR source route framework from analysis services API — get_source_route_framework","text":"","code":"get_source_route_framework(   division = NULL,   gnis_name = NULL,   water_district = NULL,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_source_route_framework.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return DWR source route framework from analysis services API — get_source_route_framework","text":"division character, division query retrieve DWR source route frameworks. Defaults NULL. gnis_name character, GNIS Name query retrieve DWR source route frameworks. Defaults NULL. water_district character, water district query retrieve DWR source route frameworks. Defaults NULL. api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_source_route_framework.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return DWR source route framework from analysis services API — get_source_route_framework","text":"dataframe water source route framework","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_divrecday.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Structure Daily Diversion/Release Records — get_structure_divrecday","title":"Return Structure Daily Diversion/Release Records — get_structure_divrecday","text":"","code":"Make a request to the api/v2/structures/divrec/divrecday/ endpoint to retrieve daily structure diversion/release data for a specified WDID within a specified date range."},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_divrecday.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Structure Daily Diversion/Release Records — get_structure_divrecday","text":"","code":"get_structure_divrecday(   wdid = NULL,   wc_identifier = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_divrecday.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Structure Daily Diversion/Release Records — get_structure_divrecday","text":"wdid character vector list characters indicating WDID code structure wc_identifier character, series water class codes provide location diversion, SOURCE water, USE water administrative operation required make diversion. Provide \"diversion\" \"release\" retrieve diversion/release records. Default NULL return diversions records. start_date character date request data start point YYYY-MM-DD. Default start date \"1900-01-01\". end_date character date request data end point YYYY-MM-DD. Default end date current date function run. api_key character, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_divrecday.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Structure Daily Diversion/Release Records — get_structure_divrecday","text":"dataframe diversion flow data CDSS structure interest","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_divrecmonth.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Structure Monthly Diversion/Release Records — get_structure_divrecmonth","title":"Return Structure Monthly Diversion/Release Records — get_structure_divrecmonth","text":"Make request api/v2/structures/divrec/divrecmonth/ endpoint retrieve monthly structure  diversion/release data specified WDID within specified date range.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_divrecmonth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Structure Monthly Diversion/Release Records — get_structure_divrecmonth","text":"","code":"get_structure_divrecmonth(   wdid = NULL,   wc_identifier = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_divrecmonth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Structure Monthly Diversion/Release Records — get_structure_divrecmonth","text":"wdid character vector list characters indicating WDID code structure wc_identifier character, series water class codes provide location diversion, SOURCE water, USE water administrative operation required make diversion. Provide \"diversion\" \"release\" retrieve diversion/release records. Default NULL return diversions records. start_date character date request data start point YYYY-MM-DD. Default start date \"1900-01-01\". end_date character date request data end point YYYY-MM-DD. Default end date current date function run. api_key character, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_divrecmonth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Structure Monthly Diversion/Release Records — get_structure_divrecmonth","text":"dataframe monthly structure data CDSS structure interest","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_divrecyear.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Structure Yearly Diversion/Release Records — get_structure_divrecyear","title":"Return Structure Yearly Diversion/Release Records — get_structure_divrecyear","text":"Make request api/v2/structures/divrec/divrecyear/ endpoint retrieve annual structure diversion/release data specified WDID within specified date range.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_divrecyear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Structure Yearly Diversion/Release Records — get_structure_divrecyear","text":"","code":"get_structure_divrecyear(   wdid = NULL,   wc_identifier = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_divrecyear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Structure Yearly Diversion/Release Records — get_structure_divrecyear","text":"wdid character vector list characters indicating WDID code structure wc_identifier wc_identifier character, series water class codes provide location diversion, SOURCE water, USE water administrative operation required make diversion. Provide \"diversion\" \"release\" retrieve diversion/release records. Default NULL return diversions records. start_date character date request data start point YYYY-MM-DD. Default start date \"1900-01-01\". end_date character date request data end point YYYY-MM-DD. Default end date current date function run. api_key character, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_divrecyear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Structure Yearly Diversion/Release Records — get_structure_divrecyear","text":"dataframe yearly structure data CDSS structure interest","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_stage_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Structure stage/volume records — get_structure_stage_ts","title":"Return Structure stage/volume records — get_structure_stage_ts","text":"Make request api/v2/structures/divrec/stagevolume/ endpoint retrieve structure stage/volume data WDID(s) within specified date range.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_stage_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Structure stage/volume records — get_structure_stage_ts","text":"","code":"get_structure_stage_ts(   wdid = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_stage_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Structure stage/volume records — get_structure_stage_ts","text":"wdid character vector list WDID codes start_date character date request data start point YYYY-MM-DD. Default start date \"1900-01-01\". end_date character date request data end point YYYY-MM-DD. Default end date current date function run. api_key character, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_stage_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Structure stage/volume records — get_structure_stage_ts","text":"dataframe stage/volume data CDSS structure(s) interest","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structure_stage_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Structure stage/volume records — get_structure_stage_ts","text":"","code":"if (FALSE) { # Request endpoint: api/v2/structures/divrec/stagevolume stage_vol <- get_structure_stage_ts(                    wdid             = \"0303732\",                    start_date       = \"2000-01-01\",                    end_date         = \"2005-01-01\"                  )  # plot stage plot(stage_vol$stage~stage_vol$datetime, type = \"s\")  # plot volume plot(stage_vol$volume~stage_vol$datetime, type = \"s\")  # get stage/volume data for multiple WDIDs multi_wdids <- get_structure_stage_ts(                wdid          = c(\"0504010\", \"0504020\", \"0504021\"),                start_date    = \"2021-06-01\",                end_date      = \"2021-08-01\"                ) }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structures.html","id":null,"dir":"Reference","previous_headings":"","what":"Return list of administrative structures — get_structures","title":"Return list of administrative structures — get_structures","text":"Make request /structures endpoint locate administrative structures via spatial search division, county, water_district, GNIS, WDID.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return list of administrative structures — get_structures","text":"","code":"get_structures(   aoi = NULL,   radius = NULL,   county = NULL,   division = NULL,   gnis_id = NULL,   water_district = NULL,   wdid = NULL,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return list of administrative structures — get_structures","text":"aoi list length 2 containing XY coordinate pair, 2 column matrix/dataframe XY coordinates, sf Terra SpatVector point/polygon/linestring geometry radius numeric, search radius miles around given point (centroid polygon). AOI given, radius defaults 20 miles. AOI given, default NULL. county character, indicating county query division numeric, indicating water division query gnis_id character, water source - Geographic Name Information System ID water_district numeric, indicating water district query wdid character vector list characters indicating WDID code structure api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS. Defaults NULL.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return list of administrative structures — get_structures","text":"dataframe administrative structures","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return list of administrative structures — get_structures","text":"","code":"if (FALSE) { # Request endpoint: api/v2/structures/ divrec_structures <- get_structures(                            county = \"Boulder\"                            )  # plot administrative structure locations plot(divrec_structures$latdecdeg~divrec_structures$longdecdeg) }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structures_divrec_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Return diversion/releases record data for administrative structures — get_structures_divrec_ts","title":"Return diversion/releases record data for administrative structures — get_structures_divrec_ts","text":"Make request CDSS API /structures/divrec endpoints get diversion/releases time series data administrative structures wdid, within given date range (start end dates) specified temporal resolution.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structures_divrec_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return diversion/releases record data for administrative structures — get_structures_divrec_ts","text":"","code":"get_structures_divrec_ts(   wdid = NULL,   wc_identifier = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   timescale = NULL,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structures_divrec_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return diversion/releases record data for administrative structures — get_structures_divrec_ts","text":"wdid character vector list characters indicating WDID code structure. wc_identifier character, series water class codes provide location diversion, SOURCE water, USE water administrative operation required make diversion. Provide \"diversion\" \"release\" retrieve diversion/release records. Default NULL return diversions records. start_date character date request data start point YYYY-MM-DD. Default start date \"1900-01-01\". end_date character date request data end point YYYY-MM-DD. Default end date current date function run. timescale character indicating time series time step. Either \"day\", \"month\", \"year\". Default return daily time series. api_key character, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structures_divrec_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return diversion/releases record data for administrative structures — get_structures_divrec_ts","text":"dataframe diversion records data CDSS structure interest","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_structures_divrec_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return diversion/releases record data for administrative structures — get_structures_divrec_ts","text":"","code":"if (FALSE) { # Request endpoint: api/v2/structures/divrec/divrecday divrecord_day <- get_structures_divrec_ts(                wdid             = \"2302917\",                wc_identifier    = \"diversion\",                start_date       = \"2000-01-01\",                end_date         = \"2005-01-01\",                timescale        = \"day\"                )  # plot daily diversion record plot(divrecord_day$data_value~divrecord_day$datetime, type = \"s\")  # Request endpoint: api/v2/structures/divrec/divrecmonth divrecord_month <- get_structures_divrec_ts(                    wdid             = \"2302917\",                    wc_identifier    = \"diversion\",                    start_date       = \"2000-01-01\",                    end_date         = \"2005-01-01\",                    timescale        = \"month\"                  )  # plot monthly diversion record plot(divrecord_month$data_value~divrecord_month$datetime, type = \"s\")  # Request endpoint: api/v2/structures/divrec/divrecyear divrecord_year <- get_structures_divrec_ts(                     wdid             = \"2302917\",                     wc_identifier    = \"diversion\",                     start_date       = \"2000-01-01\",                     end_date         = \"2022-01-01\",                     timescale        = \"year\"                     )  # plot yearly diversion record plot(divrecord_year$data_value~divrecord_year$data_meas_date, type = \"s\") }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_sw_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Surface Water Station information — get_sw_stations","title":"Return Surface Water Station information — get_sw_stations","text":"Make request /surfacewater/surfacewaterstations endpoint locate surface water stations AOI, station abbreviation, county, division, station name, USGS ID water_district.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_sw_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Surface Water Station information — get_sw_stations","text":"","code":"get_sw_stations(   aoi = NULL,   radius = NULL,   abbrev = NULL,   county = NULL,   division = NULL,   station_name = NULL,   usgs_id = NULL,   water_district = NULL,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_sw_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Surface Water Station information — get_sw_stations","text":"aoi list length 2 containing XY coordinate pair, 2 column matrix/dataframe XY coordinates, sf Terra SpatVector point/polygon/linestring geometry radius numeric, search radius miles around given point (centroid polygon). AOI given, radius defaults 20 miles. AOI given, default NULL. abbrev character vector list characters station abbreviation county character, indicating county query division numeric, indicating water division query station_name character, surface water station name usgs_id character vector list characters USGS Site IDs water_district numeric, indicating water district query api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_sw_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Surface Water Station information — get_sw_stations","text":"dataframe surface water station info","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_sw_stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Surface Water Station information — get_sw_stations","text":"","code":"if (FALSE) { # Retrieve surface water station info from Larimer county sw_stations <- get_sw_stations(                     county = \"Larimer\"                     ) # plot latitude/longitude of surface water stations plot(sw_stations$latitude~sw_stations$longitude) }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_sw_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Return surface water time series data — get_sw_ts","title":"Return surface water time series data — get_sw_ts","text":"Make request /surfacewater/surfacewaterts/ endpoints (surfacewatertsday, surfacewatertsmonth, surfacewatertswateryear) retrieve surface water station time series data station abbreviations, station number, USGS Site IDs within given date range (start end dates)","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_sw_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return surface water time series data — get_sw_ts","text":"","code":"get_sw_ts(   abbrev = NULL,   station_number = NULL,   usgs_id = NULL,   start_date = \"1900-01-01\",   end_date = Sys.Date(),   timescale = \"day\",   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_sw_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return surface water time series data — get_sw_ts","text":"abbrev character,    station abbreviation station_number character, surface water station number usgs_id character, USGS Site ID start_date character date request data start point YYYY-MM-DD. Default start date \"1900-01-01\". end_date character date request data end point YYYY-MM-DD. Default end date current date function run. timescale character indicating time series time step. Either \"day\", \"month\", \"year\". Default return daily time series. api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_sw_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return surface water time series data — get_sw_ts","text":"dataframe surface water station time series data","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_sw_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return surface water time series data — get_sw_ts","text":"","code":"if (FALSE) { # Retrieve surface water daily time series sw_ts_day <-  get_sw_ts(   abbrev     = \"CLAFTCCO\",   start_date = \"2000-01-01\",   end_date   = \"2022-01-01\",   timescale  = \"day\"   )  # plot daily flow plot(sw_ts_day$value~sw_ts_day$datetime, type = \"s\")  # Retrieve surface water monthly time series sw_ts_month <-  get_sw_ts(   abbrev     = \"CLAFTCCO\",   start_date = \"2000-01-01\",   end_date   = \"2022-01-01\",   timescale  = \"month\"   ) # plot average monthly flow plot(sw_ts_month$avg_qcfs~sw_ts_month$datetime, type = \"s\")  # Retrieve surface water water year time series sw_ts_year <-  get_sw_ts(   abbrev     = \"CLAFTCCO\",   start_date = \"2000-01-01\",   end_date   = \"2022-01-01\",   timescale  = \"wateryear\"   )  # plot average water year flow plot(sw_ts_year$avg_qcfs~sw_ts_year$water_year, type = \"s\") }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_telemetry_stations.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Telemetry Station information — get_telemetry_stations","title":"Return Telemetry Station information — get_telemetry_stations","text":"Make request telemetrystations/telemetrystation/ endpoint locate telemetry stations AOI, station abbreviations, county, division, station abbreviation, GNIS ID, USGS Station ID, WDID","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_telemetry_stations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Telemetry Station information — get_telemetry_stations","text":"","code":"get_telemetry_stations(   aoi = NULL,   radius = NULL,   abbrev = NULL,   county = NULL,   division = NULL,   gnis_id = NULL,   usgs_id = NULL,   water_district = NULL,   wdid = NULL,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_telemetry_stations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Telemetry Station information — get_telemetry_stations","text":"aoi list length 2 containing XY coordinate pair, 2 column matrix/dataframe XY coordinates, sf Terra SpatVector point/polygon/linestring geometry radius numeric, search radius miles around given point (centroid polygon). AOI given, radius defaults 20 miles. AOI given, default NULL. abbrev character vector list characters station abbreviation county character, indicating county query division numeric, indicating water division query gnis_id character, water source - Geographic Name Information System ID usgs_id character, indicating USGS Station ID water_district numeric, indicating water district query wdid character indicating WDID code structure api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_telemetry_stations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Telemetry Station information — get_telemetry_stations","text":"dataframe telemetry station info","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_telemetry_stations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Telemetry Station information — get_telemetry_stations","text":"","code":"if (FALSE) { # Retrieve telemetry stations within a county telemetry_station <- get_telemetry_stations(                                county = \"Adams\"                                )  # plot telemetry station locations plot(telemetry_station$latitude~telemetry_station$longitude) }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_telemetry_ts.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Telemetry station time series data — get_telemetry_ts","title":"Return Telemetry station time series data — get_telemetry_ts","text":"Make request /telemetrystations/telemetrytimeseries endpoint retrieve raw, hourly, daily telemetry station time series data station abbreviations, within given date range (start end dates).","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_telemetry_ts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Telemetry station time series data — get_telemetry_ts","text":"","code":"get_telemetry_ts(   abbrev = NULL,   parameter = \"DISCHRG\",   start_date = \"1900-01-01\",   end_date = Sys.Date(),   timescale = \"day\",   include_third_party = TRUE,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_telemetry_ts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Telemetry station time series data — get_telemetry_ts","text":"abbrev character indicating station abbreviation parameter character indicating parameter retrieved. Default \"DISCHRG\" (discharge), parameters avaliable telemetry stations. start_date character date request data start point YYYY-MM-DD. Default start date \"1900-01-01\". end_date character date request data end point YYYY-MM-DD. Default end date current date function run. timescale character indicating data type return, either \"raw\", \"hour\", \"day\". Default \"day\" include_third_party logical, Whether retrieve data third party sources necessary. Default TRUE api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_telemetry_ts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Telemetry station time series data — get_telemetry_ts","text":"dataframe telemetry station time series data","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_telemetry_ts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Telemetry station time series data — get_telemetry_ts","text":"","code":"if (FALSE) { # Retrieve daily discharge for CLAFTCCO telemetry station telem_ts <- get_telemetry_ts(            abbrev              = \"CLAFTCCO\",            parameter           = \"DISCHRG\",            start_date          = \"2015-01-01\",            end_date            = \"2022-01-01\",            timescale           = \"day\",            include_third_party = TRUE            )  # Plot daily discharge data plot(telem_ts$meas_value~telem_ts$datetime, type = \"l\") }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_classes.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns list of waterclasses — get_water_classes","title":"Returns list of waterclasses — get_water_classes","text":"Make request /structures/divrec/waterclasses endpoint identify water classes via spatial search division, county, water_district, GNIS, WDID.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_classes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns list of waterclasses — get_water_classes","text":"","code":"get_water_classes(   wdid = NULL,   county = NULL,   division = NULL,   water_district = NULL,   wc_identifier = NULL,   aoi = NULL,   radius = NULL,   gnis_id = NULL,   start_date = NULL,   end_date = NULL,   divrectype = NULL,   ciu_code = NULL,   timestep = NULL,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_classes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns list of waterclasses — get_water_classes","text":"wdid character vector list characters indicating WDID code structure county character, indicating county query division numeric, indicating water division query water_district numeric, indicating water district query wc_identifier character, series water class codes provide location diversion, SOURCE water, USE water administrative operation required make diversion. Water Class, combined daily, monthly annual volume, constitutes Diversion Record. aoi list length 2 containing XY coordinate pair, 2 column matrix/dataframe XY coordinates, sf Terra SpatVector point/polygon/linestring geometry radius numeric, search radius miles around given point (centroid polygon). AOI given, radius defaults 20 miles. AOI given, default NULL. gnis_id character, water source - Geographic Name Information System ID start_date character date first measurement well’s period record (YYYY-MM-DD). Default NULL. end_date character date last measurement well’s period record (YYYY-MM-DD). Default NULL. divrectype character, type record: \"DivComment\", \"DivTotal\", \"RelComment\", \"RelTolal\", \"StageVolume\", \"WaterClass\". ciu_code character, current use code structure timestep character, timestep, one \"day\", \"month\", \"year\" api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS. Defaults NULL.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_classes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns list of waterclasses — get_water_classes","text":"dataframe administrative structures","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_classes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns list of waterclasses — get_water_classes","text":"","code":"if (FALSE) { # Request endpoint: /structures/divrec/waterclasses wc <- get_water_classes(                    county     = \"Boulder\",                    start_date = \"1999-01-01\",                    end_date   = \"2005-01-01\",                    timestep   = \"year\"                    ) }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_rights_netamount.html","id":null,"dir":"Reference","previous_headings":"","what":"Return water rights net amounts data — get_water_rights_netamount","title":"Return water rights net amounts data — get_water_rights_netamount","text":"Make request /waterrights/netamount endpoint retrieve water rights net amounts data via spatial search county, division, water district, WDID, within given date range (start end dates). Returns current status water right based court decreed actions.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_rights_netamount.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return water rights net amounts data — get_water_rights_netamount","text":"","code":"get_water_rights_netamount(   aoi = NULL,   radius = NULL,   county = NULL,   division = NULL,   water_district = NULL,   wdid = NULL,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_rights_netamount.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return water rights net amounts data — get_water_rights_netamount","text":"aoi list length 2 containing XY coordinate pair, 2 column matrix/dataframe XY coordinates, sf Terra SpatVector point/polygon/linestring geometry radius numeric, search radius miles around given point (centroid polygon). AOI given, radius defaults 20 miles. AOI given, default NULL. county character, indicating county query division numeric, indicating water division query water_district numeric, indicating water district query wdid character, indicating WDID code structure api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_rights_netamount.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return water rights net amounts data — get_water_rights_netamount","text":"dataframe water right net amounts","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_rights_netamount.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return water rights net amounts data — get_water_rights_netamount","text":"","code":"if (FALSE) { # Water right net amounts within a county county_net <- get_water_rights_netamount(county = \"Adams\")  # Water right net amounts within a division division_net <- get_water_rights_netamount(division = 1)  # Water right net amounts for a WDID wdid_net <- get_water_rights_netamount(wdid   = \"0100555\")  # Water right net amounts within a 20 mile search radius aoi_net <- get_water_rights_netamount(                   aoi    = data.frame(X = -104.3379, Y = 39.87417),                   radius = 20                   )   }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_rights_trans.html","id":null,"dir":"Reference","previous_headings":"","what":"Return water rights transactions data — get_water_rights_trans","title":"Return water rights transactions data — get_water_rights_trans","text":"Make request /waterrights/transaction endpoint retrieve water rights transactions data via spatial search county, division, water district, WDID, within given date range (start end dates). Returns List court decreed actions affect amount use(s) can used water right.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_rights_trans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return water rights transactions data — get_water_rights_trans","text":"","code":"get_water_rights_trans(   aoi = NULL,   radius = NULL,   county = NULL,   division = NULL,   water_district = NULL,   wdid = NULL,   api_key = NULL )"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_rights_trans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return water rights transactions data — get_water_rights_trans","text":"aoi list length 2 containing XY coordinate pair, 2 column matrix/dataframe XY coordinates, sf Terra SpatVector point/polygon/linestring geometry radius numeric, search radius miles around given point (centroid polygon). AOI given, radius defaults 20 miles. AOI given, default NULL. county character, indicating county query division numeric, indicating water division query water_district numeric, indicating water district query wdid character, indicating WDID code structure api_key character, API authorization token, optional. maximum number requests per day desired, API key can obtained CDSS.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_rights_trans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return water rights transactions data — get_water_rights_trans","text":"dataframe water right transactions","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/get_water_rights_trans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return water rights transactions data — get_water_rights_trans","text":"","code":"if (FALSE) { # Water right transactions within a county county_wr <- get_water_rights_trans(county = \"Adams\")   # Water right transactions within a division division_wr <- get_water_rights_trans(division = 1)   # Water right transactions for a WDID wdid_wr <- get_water_rights_trans(wdid   = \"2000502\")   # Water right transactions within a 20 mile search radius aoi_wr <- get_water_rights_trans(                   aoi    = data.frame(X = -104.3379, Y = 39.87417),                   radius = 20                   ) }"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/resource_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"Meta data for CDSS REST API resources — resource_meta","title":"Meta data for CDSS REST API resources — resource_meta","text":"Dataframe containing meta data data returned CDSS REST API endpoints","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/resource_meta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Meta data for CDSS REST API resources — resource_meta","text":"","code":"resource_meta"},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/resource_meta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Meta data for CDSS REST API resources — resource_meta","text":"object class tbl_df (inherits tbl, data.frame) 1031 rows 5 columns.","code":""},{"path":"https://anguswg-ucsb.github.io/cdssr/reference/resource_meta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Meta data for CDSS REST API resources — resource_meta","text":"","code":"if (FALSE) {  cdssr::resource_meta }"}]
